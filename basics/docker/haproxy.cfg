#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
#    log         /dev/log local0
#    log         /dev/log local1 notice
    chroot      /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats       timeout 30s
    user        haproxy
    group       haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
    ssl-default-bind-options no-sslv3


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will 
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log         global
    mode        http          # Work as Layer 7 instaed of Layer 4
    option      httplog       # turn on verbose logging
    option      dontlognull   # Skip logs if request does not send any data
    timeout connect 5000
    timeout client 50000
    timeout server 50000
#    errorfile 400 /etc/haproxy/errors/400.http
#    errorfile 403 /etc/haproxy/errors/403.http
#    errorfile 408 /etc/haproxy/errors/408.http
#    errorfile 500 /etc/haproxy/errors/500.http
#    errorfile 502 /etc/haproxy/errors/502.http
#    errorfile 503 /etc/haproxy/errors/503.http
#    errorfile 504 /etc/haproxy/errors/504.http


#---------------------------------------------------------------------
# Frontend myproxy
#---------------------------------------------------------------------
frontend myproxy
  bind 127.0.0.1:81           # passing * or null points to every IPs configured on the host
  default_backend mywebservers

#---------------------------------------------------------------------
# Backend mywebservers
#---------------------------------------------------------------------
backend mywebservers
  server nginx1 127.0.0.1:80
